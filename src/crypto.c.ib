#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <zlib.h>

extern char ascii_art[128][128]
extern int max_width
extern int max_height
extern int max_colors 

static int clamp(int min, int max, int in)
	return in < min ? min : in > max ? max : in

#define CHUNK_SIZE 1024

unsigned int get_checksum(FILE * fp)
	unsigned int sum = crc32(0L, Z_NULL, 0)
	unsigned char buffer[CHUNK_SIZE]
	
	size_t x
	while ((x = fread(buffer, 1, CHUNK_SIZE, fp)) > 0)
		sum = crc32(sum, buffer, x)
	
	rewind(fp)
	
	return sum

void drunken_bishop(FILE * fp)
	const int w = 28
	const int h = 16
	const int it = 500
	const char set[] = " .o+=*B0X@%&#/^SE"
	
	srandom(get_checksum(fp))
	
	int map[256][256]
	for (int bz = 0; bz < h; ++bz)
		bzero(map[bz], w)
	
	int x = random() % w, y = random() % h
	int i = 0
	while (i < it)
		switch (random() % 4)
			case 0: // up left
				if (x > 0) x--
				if (y < h - 1) y++
				++map[y][x]
				break
			case 1: // up right
				if (x < w - 1) x++
				if (y < h - 1) y++
				++map[y][x]
				break
			case 2: // down left
				if (x > 0) x--
				if (y > 0) y--
				++map[y][x]
				break
			case 3: // down right
				if (x < w - 1) x++
				if (y > 0) y--
				++map[y][x]
				break
		++i
	
	max_width = w
	max_height = h
	for (y = 0; y < h; ++y)
		for (x = 0; x < w; ++x)
			ascii_art[y][x] = set[clamp(0, 16, map[y][x])]
	
	return
